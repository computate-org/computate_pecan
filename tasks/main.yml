---
- name: "Install dependencies as root: {{ APP_DEPENDENCIES | join(' ') }}"
  package:
    name: "{{ APP_DEPENDENCIES }}"
  become: true
  register: INSTALL_DEPENDENCIES
  ignore_errors: true
- name: "Install dependencies as user {{ APP_USER }}: {{ APP_DEPENDENCIES | join(' ') }}"
  shell: "pkcon install -y {{ item }} | true"
  loop: "{{ APP_DEPENDENCIES }}"
  when: INSTALL_DEPENDENCIES.failed

- name: Create the directory {{ APP_SRC }}
  file:
    name: "{{ APP_SRC }}"
    state: directory
    owner: "{{ APP_USER }}"
    group: root
  become: "{{ APP_ROOT }}"
- name: Check for the {{ APP_NAME }} README file
  stat:
    path: "{{ APP_README }}"
  register: APP_README_PATH
- name: "Clone the {{ APP_REPO_SSH }} source code into {{ APP_SRC }}"
  ansible.builtin.git:
    repo: "{{ APP_REPO_SSH }}"
    dest: "{{ APP_SRC }}"
    version: "{{ APP_TAG }}"
  ignore_errors: true
  when: not APP_README_PATH.stat.exists
  register: CLONE_REPO
- name: "Clone the {{ APP_REPO_HTTPS }} source code into {{ APP_SRC }}"
  ansible.builtin.git:
    repo: "{{ APP_REPO_HTTPS }}"
    dest: "{{ APP_SRC }}"
    version: "{{ APP_TAG }}"
  when: not APP_README_PATH.stat.exists and CLONE_REPO.failed

- name: Create the data directory {{ APP_DATA }}
  file:
    name: "{{ APP_DATA }}"
    state: directory
    owner: "{{ APP_USER }}"
    group: root
  become: "{{ APP_DATA_ROOT }}"

- name: install the amqp PHP extension
  shell: pecl install amqp
  become: true
  ignore_errors: true
- name: Add amqp extension to php.ini
  community.general.ini_file:
    path: /etc/php.ini
    section: PHP
    option: extension
    value: amqp.so
    state: present
  become: true
- name: Link config.php
  ansible.builtin.file:
    src: "{{ APP_SRC }}/docker/web/config.docker.php"
    dest: "{{ APP_SRC }}/web/config.php"
    owner: "{{ APP_USER }}"
    state: link
  tags: link-config
- name: Link pecan web directory to httpd /var/www/html/pecan
  ansible.builtin.file:
    src: "{{ APP_SRC }}/web"
    dest: /var/www/html/pecan
    owner: "{{ APP_USER }}"
    state: link
  become: true
  tags: link-web

- name: Create env file for pecan PHP environment variables
  template:
    src: env.conf
    dest: /usr/lib/systemd/system/httpd.service.d/env.conf
  become: true
  tags: php-env

- name: Restart httpd
  service:
    name: "httpd"
    enabled: yes
    state: restarted
    daemon_reload: true
  become: true
  tags: restart-httpd
